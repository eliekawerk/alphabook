#for ticker in universe_tickers:
 #   tmp_df = pdr.get_data_yahoo(ticker, start=period_start, end=period)[['Adj Close']]
  #  tmp_df['Ticker'] = ticker
   # prices_df = pd.concat([prices_df, tmp_df])

# Validate data
#print(prices_df.tail(5))
#print(prices_df.isnull().sum())
#print(prices_df.groupby('ticker')['adj_close'].agg(['count']))

# Standardize col names
#prices_df.index = prices_df.index.rename('date')
#prices_df.columns = ['price', 'ticker']

# Flatten the columns multi-index
#prices_df = prices_df.pivot_table(index='date', columns='ticker', values=['price'])
#prices_df.columns = [col[1] for col in prices_df.columns.values]

asset_df = asset_df.rename_axis(index={'Date': 'date'})

print(asset_df.index.names)
print(asset_df.columns)

today = datetime.datetime.today()
next_month = today + dateutil.relativedelta.relativedelta(months=1)
cal_range_start = datetime.date(year=today.year, month=today.month, day=1)
cal_range_end_day = calendar.monthrange(year=next_month.year, month=next_month.month)[1]
cal_range_end = datetime.date(year=next_month.year, month=next_month.month, day=cal_range_end_day)

# Load trading venue calendar using date range
exch_cal = mcal.get_calendar(exchange_label)
exch_sched_df = exch_cal.schedule(start_date=cal_range_start, end_date=cal_range_end)
exch_curr_eom = exch_sched_df[exch_sched_df.index.month == today.month].iloc[-1]['market_close'].date()